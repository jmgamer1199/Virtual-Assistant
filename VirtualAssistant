
            # -------------------------------------- LIBRERIAS -------------------------------------- #

import speech_recognition as sr
import pyttsx3
import os
import re
import random

            # -------------------------------------- ASISTENTE VIRTUAL -------------------------------------- #

def asistente_virtual():

    # Lista de palabras clave aceptadas para los comandos

    comando_hora = ["que hora es", "dime la hora", "qué hora es"]

    comando_texto = ["lee el texto", "dime el texto del archivo", "E", "EH"]

    comando_dado = ["tira un dado", "lanza un dado"]

    comando_holamundo = ["hola mundo" , "dime holamundo"]

    # Inicializar el reconocimiento de voz
    r = sr.Recognizer()
    
    # Inicializar el motor de voz
    engine = pyttsx3.init()

    #Selecciona la voz que quieras utilizar
    voices = engine.getProperty('voices')
    engine.setProperty('voice', voices[0].id)

    # Establecer la velocidad de habla
    engine.setProperty('rate', 150)
    
    # Nombre del asistente virtual
    nombre_asistente = "patata"
    
    # Presentarse
    print(f"Soy {nombre_asistente}, ¿cómo puedo ayudarte?")

            # -------------------------------------- INICIA EL BUCLE -------------------------------------- #
    
    while True:

        # Obtener entrada de audio del usuario
        with sr.Microphone() as source:
            print("Escuchando...")
            audio = r.listen(source)

        # Reconocer la entrada de audio
        try:
            comando = r.recognize_google(audio, language='es-ES')
            print("Has dicho: " + comando)
            
            # Verificar si el usuario menciona el nombre del asistente
            if nombre_asistente.lower() in comando.lower():

            # -------------------------------------- DECIR HORA -------------------------------------- #

                # Ejecutar acción según el comando recibido
                if any(palabra in comando for palabra in comando_hora):
                    import datetime
                    ahora = datetime.datetime.now()
                    hora = ahora.strftime("%H:%M")
                    engine.say("La hora actual es " + hora)
                    engine.runAndWait()

            # -------------------------------------- LEER TEXTO -------------------------------------- #

                elif any(palabra in comando for palabra in comando_texto):
                    ruta_archivo = "H:\Asistente virtual\Texto.txt"
            
                    if not os.path.exists(ruta_archivo):
                        # Crear archivo
                        with open(ruta_archivo, "w") as archivo:
                            archivo.write("")
                        engine.say(f"El archivo {ruta_archivo} ha sido creado.")
                    else:
                        # Leer contenido del archivo
                        with open(ruta_archivo, "r") as archivo:
                            contenido = archivo.read()
                        if contenido:
                            engine.say(f"Texto del archivo: {contenido}")
                        else:
                            engine.say(f"En el archivo {ruta_archivo} no se ha encontrado ningún texto.")
                    engine.runAndWait()

            # -------------------------------------- DADO -------------------------------------- #

                elif any(palabra in comando for palabra in comando_dado):
                    numeros = ["1", "2", "3", "4", "5"]
                    dado = random.choice(numeros)
                    engine.say(f'He lanzado el dado y el numero que ha salido es {dado}')
                    engine.runAndWait() 

                    # -------------------------------------- Hola Mundo! -------------------------------------- #
                       elif any(palabra in comando for palabra in comando comando_holamundo) : 
                        hortalizas = [ " patata " , lechuga"] 
                        aleatorio = random.choice(hortalizas)
                        engine.say (f" aleaotorio")
                        engine.runAndWait ()

            # -------------------------------------- ERRORES -------------------------------------- #

                else:
                    engine.say("Lo siento, no entiendo el comando.")
                    engine.runAndWait()
            else:
                engine.say("Lo siento, no te entiendo. ¿Podrías mencionar mi nombre antes de darme una orden?")
        except:
            print("Lo siento, no pude entender lo que dijiste.")
            #engine.say("Lo siento, no pude entender lo que dijiste.")
            engine.runAndWait()

            # -------------------------------------- ##### -------------------------------------- #

# Ejecutar el asistente virtual
asistente_virtual() 

